# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.56.10"
#  config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
    # Customize the amount of memory on the VM:
    vb.memory = "1024"
    vb.cpus = "2"
    vb.name = "wordpress"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    # system setting
    timedatectl set-timezone Asia/Tokyo
    setenforce 0
    sed -i -e 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
    # php setting
    yum install -y epel-release
    rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
    yum remove -y php-*
    yum install -y --enablerepo=remi,remi-php71 php php-devel php-mbstring php-pdo php-gd php-xml php-mcrypt php-mysql wget
    echo "<?php phpinfo(); ?>" >info.php
    mv info.php /var/www/html/.
    systemctl enable httpd
    systemctl start httpd
    # db setting
    cat >/tmp/MariaDb.repo <<EOF
# MariaDB 10.2 CentOS repository list - created 2017-08-11 12:07 UTC
# http://downloads.mariadb.org/mariadb/repositories/
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.2/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
EOF
    mv /tmp/MariaDb.repo /etc/yum.repos.d/.
    yum remove -y mariadb*
    yum install -y MariaDB-server MariaDB-client
    systemctl start mysqld
    # wordpress setting
    su - vagrant
    # en
    #wget http://wordpress.org/latest.tar.gz
    #tar -xzvf latest.tar.gz && rm latest.tar.gz
    # jp
    wget https://ja.wordpress.org/latest-ja.tar.gz
    tar -xzvf latest-ja.tar.gz && rm latest-ja.tar.gz
    mysql -u root <<EOF
      CREATE DATABASE wpdb;
      GRANT ALL PRIVILEGES ON wpdb.* TO "wpowner"@"localhost" IDENTIFIED BY "password";
      FLUSH PRIVILEGES;
      EXIT
EOF
    cd wordpress
    sudo cp -p wp-config-sample.php wp-config.php
    sudo sed -i -e 's/database_name_here/wpdb/g' wp-config.php
    sudo sed -i -e 's/username_here/wpowner/g' wp-config.php
    sudo sed -i -e 's/password_here/password/g' wp-config.php
    cd ..
    sudo mv wordpress/* /var/www/html/.
  SHELL
end
